<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/shcema/mvc/spring-mvc-4.2.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd">
       <!--  将包里的接口全部当做mapper配置之后可以自动引入mapper类-->
       <mybatis:scan base-package="com.mybatis.mapper"/>
       <!--扫描包下，有spring的相关注解的类，则把这些类注册为spring的bean  -->
       <context:component-scan base-package="com.mybatis"/>
       
	<!-- <context:annotation-config /> -->
	<!--导入数据源配置 使用PropertyOverrideConfigurer后处理器加载数据源参数  -->
	<context:property-override location="classpath:db.properties"/>
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" />
	<!--配置SqlSessionFactory.org.mybatis.spring.SqlSessionFactoryBean是Myatis社区开发应用于整合Spring的bean  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource"/>
	<!-- jdbc事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource"/>
	<!-- 启用支持annotation注解方式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>
